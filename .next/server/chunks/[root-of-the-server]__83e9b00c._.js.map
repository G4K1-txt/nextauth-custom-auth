{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/fine/src/lib/sendEmail.ts"],"sourcesContent":["import nodemailer from \"nodemailer\"\r\n\r\nexport async function sendMail({ to, subject, html }: { to: string; subject: string; html: string }) {\r\n  try {\r\n    const transporter = nodemailer.createTransport({\r\n      host: process.env.SMTP_HOST,\r\n      port: 587,\r\n      secure: false,\r\n      auth: {\r\n        user: process.env.SMTP_USER,\r\n        pass: process.env.SMTP_PASS,\r\n      },\r\n    });\r\n\r\n    const info = await transporter.sendMail({\r\n      from: `\"Seu App\" <${process.env.SMTP_USER}>`,\r\n      to,\r\n      subject,\r\n      html,\r\n    });\r\n\r\n    console.log('Email enviado:', info.messageId);\r\n  } catch (error) {\r\n    console.error('Erro no sendMail():');\r\n    throw error;\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,SAAS,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAiD;IACjG,IAAI;QACF,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC3B,MAAM;YACN,QAAQ;YACR,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;gBAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC7B;QACF;QAEA,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;YACtC,MAAM,CAAC,WAAW,EAAE,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5C;YACA;YACA;QACF;QAEA,QAAQ,GAAG,CAAC,kBAAkB,KAAK,SAAS;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///C:/fine/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nexport const prisma = new PrismaClient();\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///C:/fine/src/app/api/envia-email/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { sendMail } from \"@/lib/sendEmail\";\r\nimport crypto from \"crypto\";\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { email } = await req.json();\r\n\r\n    const token = crypto.randomBytes(32).toString(\"hex\");\r\n    const expiracao = new Date(Date.now() + 60 * 60 * 1000); // 1h\r\n\r\n    // Armazena token no banco\r\n    await prisma.verificationToken.create({\r\n      data: {\r\n        identifier: email,\r\n        token,\r\n        expires: expiracao,\r\n      },\r\n    });\r\n\r\n    const resetLink = `http://localhost:3000/troca-senha?token=${token}`;\r\n\r\n    await sendMail({\r\n      to: email,\r\n      subject: \"Recuperação de Senha\",\r\n      html: `\r\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: auto; border: 1px solid #e0e0e0; border-radius: 8px; overflow: hidden;\">\r\n          <div style=\"background-color: #111111; color: white; padding: 20px; text-align: center;\">\r\n            <h1 style=\"margin: 0;\">Recuperação de Senha</h1>\r\n          </div>\r\n          <div style=\"padding: 30px;\">\r\n            <p>Olá,</p>\r\n            <p>Recebemos uma solicitação para redefinir sua senha. Para continuar, clique no botão abaixo:</p>\r\n            <div style=\"text-align: center; margin: 30px 0;\">\r\n              <a href=\"${resetLink}\" style=\"background-color: #111111; color: white; padding: 12px 24px; border-radius: 6px; text-decoration: none; font-weight: bold;\">Redefinir Senha</a>\r\n            </div>\r\n            <p>Se você não solicitou a recuperação, apenas ignore este e-mail.</p>\r\n            <p style=\"margin-top: 40px; font-size: 12px; color: #888;\">Este link expira em 1 hora por segurança.</p>\r\n          </div>\r\n        </div>\r\n      `,\r\n    });\r\n\r\n    return NextResponse.json({ sucess: \"Email enviado com sucesso\" });\r\n  } catch (err) {\r\n    return NextResponse.json({ error: \"Erro ao enviar e-mail: \" + err }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAEhC,MAAM,QAAQ,qGAAA,CAAA,UAAM,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC;QAC9C,MAAM,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,OAAO,KAAK;QAE9D,0BAA0B;QAC1B,MAAM,sHAAA,CAAA,SAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC;YACpC,MAAM;gBACJ,YAAY;gBACZ;gBACA,SAAS;YACX;QACF;QAEA,MAAM,YAAY,CAAC,wCAAwC,EAAE,OAAO;QAEpE,MAAM,CAAA,GAAA,yHAAA,CAAA,WAAQ,AAAD,EAAE;YACb,IAAI;YACJ,SAAS;YACT,MAAM,CAAC;;;;;;;;;uBASU,EAAE,UAAU;;;;;;MAM7B,CAAC;QACH;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;QAA4B;IACjE,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,4BAA4B;QAAI,GAAG;YAAE,QAAQ;QAAI;IACrF;AACF","debugId":null}}]
}