{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projeto/fine/src/app/api/verificar-email/route.ts"],"sourcesContent":["// app/api/verificar-email/route.ts\r\nimport { PrismaClient } from '@prisma/client'\r\nimport { NextResponse } from 'next/server'\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport async function GET(request: Request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const token = searchParams.get('token');\r\n\r\n    if (!token) {\r\n      return NextResponse.json({ error: 'Token de verificação ausente.' }, { status: 400 });\r\n    }\r\n\r\n    const user = await prisma.user.findFirst({\r\n      where: {\r\n        tokenVerificacao: token,\r\n        emailVerificado: null, // Garante que o e-mail ainda não foi verificado\r\n      },\r\n    });\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Token de verificação inválido ou expirado.' }, { status: 404 });\r\n    }\r\n\r\n    await prisma.user.update({\r\n      where: { id: user.id },\r\n      data: {\r\n        emailVerificado: new Date(),\r\n        tokenVerificacao: null,\r\n      },\r\n    });\r\n\r\n    return NextResponse.json(\r\n      { message: 'E-mail verificado com sucesso! Você já pode fazer login.' },\r\n      { status: 200 }\r\n    );\r\n  } catch (error) {\r\n    console.error('Erro na verificação de e-mail:', error);\r\n    return NextResponse.json(\r\n      { error: 'Erro interno ao verificar o e-mail.' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":"AAAA,mCAAmC;;;;AACnC;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,QAAQ,aAAa,GAAG,CAAC;QAE/B,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgC,GAAG;gBAAE,QAAQ;YAAI;QACrF;QAEA,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC;YACvC,OAAO;gBACL,kBAAkB;gBAClB,iBAAiB;YACnB;QACF;QAEA,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6C,GAAG;gBAAE,QAAQ;YAAI;QAClG;QAEA,MAAM,OAAO,IAAI,CAAC,MAAM,CAAC;YACvB,OAAO;gBAAE,IAAI,KAAK,EAAE;YAAC;YACrB,MAAM;gBACJ,iBAAiB,IAAI;gBACrB,kBAAkB;YACpB;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA2D,GACtE;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAsC,GAC/C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}