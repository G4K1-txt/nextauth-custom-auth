{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/fine/src/app/api/atualiza-senha/route.ts"],"sourcesContent":["// app/api/atualiza-senha/route.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { token, novaSenha } = await req.json();\r\n\r\n    const tokenValido = await prisma.verificationToken.findUnique({\r\n      where: { token },\r\n    });\r\n\r\n    if (!tokenValido || new Date(tokenValido.expires) < new Date()) {\r\n      return NextResponse.json({ error: \"Token invÃ¡lido ou expirado\" }, { status: 400 });\r\n    }\r\n\r\n    await prisma.user.update({\r\n      where: { email: tokenValido.identifier },\r\n      data: { senha: await bcrypt.hash(novaSenha, 10) },\r\n    });\r\n\r\n    await prisma.verificationToken.delete({ where: { token } });\r\n\r\n    return NextResponse.json({ ok: true });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return NextResponse.json({ error: \"Erro ao atualizar a senha\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;AAClC;AACA;AACA;;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,IAAI;QAE3C,MAAM,cAAc,MAAM,OAAO,iBAAiB,CAAC,UAAU,CAAC;YAC5D,OAAO;gBAAE;YAAM;QACjB;QAEA,IAAI,CAAC,eAAe,IAAI,KAAK,YAAY,OAAO,IAAI,IAAI,QAAQ;YAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6B,GAAG;gBAAE,QAAQ;YAAI;QAClF;QAEA,MAAM,OAAO,IAAI,CAAC,MAAM,CAAC;YACvB,OAAO;gBAAE,OAAO,YAAY,UAAU;YAAC;YACvC,MAAM;gBAAE,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,WAAW;YAAI;QAClD;QAEA,MAAM,OAAO,iBAAiB,CAAC,MAAM,CAAC;YAAE,OAAO;gBAAE;YAAM;QAAE;QAEzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,IAAI;QAAK;IACtC,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;AACF","debugId":null}}]
}